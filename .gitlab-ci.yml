stages:
  - code-check
  - tests
  - benchmark

# Cache a folder between builds.
# Tox sets it to be our pip cache.
cache:
  untracked: true
  key: soledad-shared-pip-cache
  paths:
  - testing/.cache/

before_script:
  - echo "Running on ${HOST_HOSTNAME:=$(hostname)}"
  # By default, gitlab-runner will checkout in a detached HEAD
  # (see https://gitlab.com/gitlab-org/gitlab-ce/issues/19421)
  # We want pytest-benchmark to report the proper branch name,
  # so we make sure we stay at the current branch
  - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
  - git status
  - git show -s --pretty=fuller

code-check:
  stage: code-check
  image: leapcode/soledad:latest
  script:
    - cd testing
    - tox -e code-check

tests:
  stage: tests
  image: leapcode/soledad:latest
  services:
    - couchdb
  script:
    - cd testing
    - tox -- --couch-url http://couchdb:5984

benchmark:
  stage: benchmark
  image: leapcode/soledad:latest
  tags:
    - benchmark
  services:
    - couchdb
  allow_failure: true
  script:
    # We need some files on order to post the right benchmarking data to elasticsearch
    - git checkout origin/master testing/tox.ini testing/tests/benchmarks/conftest.py testing/tests/conftest.py
    - sed -i 's/drebs\/pytest-benchmark.git@use-netrc-file/varac\/pytest-benchmark.git@unmerged_prs/' testing/tox.ini
    - git status
    - cd testing
    - curl -s couchdb:5984
    # You can provide a $NETRC variable containing the creds for your
    # elasticsearch instance so it's protected from being leaked in the
    # CI console
    # We can't get it working inside docker for unknown reasons.
    #- echo "$NETRC" > /root/.netrc && chmod 600 /root/.netrc
    #
    # Add $PYTEST_OPTS to pytest.ini to allow posting benchmark tests
    # to an elasticsearch instance
    - echo "addopts=$PYTEST_OPTS" >> pytest.ini && chmod 600 pytest.ini
    - tox --recreate -e benchmark -- --couch-url http://couchdb:5984
